{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate eligibility by grade (>=5).", "input": "", "output": "DEFAULT FOR GRADE IS 0\n\nIF GRADE >= 5 THEN\n  ELIGIBLE = 1\nELSE\n  ELIGIBLE = 0\nENDIF\n\nRETURN ELIGIBLE"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate eligibility by grade (>=5).", "input": "", "output": "DEFAULT FOR GRADE IS 0\n\nIF GRADE >= 5 THEN\n  ELIGIBLE = 1\nELSE\n  ELIGIBLE = 0\nENDIF\n\nRETURN ELIGIBLE"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate location allowance for NY ($200).", "input": "", "output": "DEFAULT FOR LOCATION IS ''\n\nIF LOCATION = 'NY' THEN\n  ALLOWANCE = 200\nELSE\n  ALLOWANCE = 0\nENDIF\n\nRETURN ALLOWANCE"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate location allowance for NY ($200).", "input": "", "output": "DEFAULT FOR LOCATION IS ''\n\nIF LOCATION = 'NY' THEN\n  ALLOWANCE = 200\nELSE\n  ALLOWANCE = 0\nENDIF\n\nRETURN ALLOWANCE"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to calculate eligibility by grade (>=5).", "input": "", "output": "DEFAULT FOR GRADE IS 0\n\nIF GRADE >= 5 THEN\n  ELIGIBLE = 1\nELSE\n  ELIGIBLE = 0\nENDIF\n\nRETURN ELIGIBLE"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to calculate eligibility by grade (>=5).", "input": "", "output": "DEFAULT FOR GRADE IS 0\n\nIF GRADE >= 5 THEN\n  ELIGIBLE = 1\nELSE\n  ELIGIBLE = 0\nENDIF\n\nRETURN ELIGIBLE"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate location allowance for NY ($200).", "input": "", "output": "DEFAULT FOR LOCATION IS ''\n\nIF LOCATION = 'NY' THEN\n  ALLOWANCE = 200\nELSE\n  ALLOWANCE = 0\nENDIF\n\nRETURN ALLOWANCE"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate eligibility by grade (>=5).", "input": "", "output": "DEFAULT FOR GRADE IS 0\n\nIF GRADE >= 5 THEN\n  ELIGIBLE = 1\nELSE\n  ELIGIBLE = 0\nENDIF\n\nRETURN ELIGIBLE"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate location allowance for NY ($200).", "input": "", "output": "DEFAULT FOR LOCATION IS ''\n\nIF LOCATION = 'NY' THEN\n  ALLOWANCE = 200\nELSE\n  ALLOWANCE = 0\nENDIF\n\nRETURN ALLOWANCE"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate taxable pay (Gross - PreTax).", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY"}
{"instruction": "Write a Fast Formula to calculate location allowance for NY ($200).", "input": "", "output": "DEFAULT FOR LOCATION IS ''\n\nIF LOCATION = 'NY' THEN\n  ALLOWANCE = 200\nELSE\n  ALLOWANCE = 0\nENDIF\n\nRETURN ALLOWANCE"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate a 10% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 5% with $1000 cap.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate shift differential at 1.25x.", "input": "", "output": "DEFAULT FOR SHIFT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nSHIFT_PAY = SHIFT_HOURS * HOURLY_RATE * 1.25\n\nRETURN SHIFT_PAY"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate a 12% annual bonus.", "input": "", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1200\n\nRETURN BONUS"}
{"instruction": "Write a Fast Formula to calculate eligibility by grade (>=5).", "input": "", "output": "DEFAULT FOR GRADE IS 0\n\nIF GRADE >= 5 THEN\n  ELIGIBLE = 1\nELSE\n  ELIGIBLE = 0\nENDIF\n\nRETURN ELIGIBLE"}
{"instruction": "Write a Fast Formula to enforce a minimum hourly rate of $15.", "input": "", "output": "DEFAULT FOR HOURLY_RATE IS 0\n\nIF HOURLY_RATE < 15 THEN\n  SAFE_RATE = 15\nELSE\n  SAFE_RATE = HOURLY_RATE\nENDIF\n\nRETURN SAFE_RATE"}
{"instruction": "Write a Fast Formula to cap total earnings at $2000.", "input": "", "output": "DEFAULT FOR TOTAL_EARNINGS IS 0\n\nIF TOTAL_EARNINGS > 2000 THEN\n  TOTAL_CAPPED = 2000\nELSE\n  TOTAL_CAPPED = TOTAL_EARNINGS\nENDIF\n\nRETURN TOTAL_CAPPED"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate long service bonus (>=5 years, 5%).", "input": "", "output": "DEFAULT FOR YEARS_OF_SERVICE IS 0\nDEFAULT FOR BASE_SALARY IS 0\n\nIF YEARS_OF_SERVICE >= 5 THEN\n  LONG_SERVICE_BONUS = BASE_SALARY * 0.0500\nELSE\n  LONG_SERVICE_BONUS = 0\nENDIF\n\nRETURN LONG_SERVICE_BONUS"}
{"instruction": "Write a Fast Formula to calculate total pay including overtime at 1.5x.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to safely divide two values.", "input": "", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to round an amount to 2 decimals.", "input": "", "output": "DEFAULT FOR AMOUNT IS 0\n\nROUNDED = ROUND(AMOUNT, 2)\n\nRETURN ROUNDED"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate regular pay.", "input": "", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 1.5x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to calculate holiday pay at 2.0x.", "input": "", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Write a Fast Formula to calculate overtime at 2.0x.", "input": "", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Write a Fast Formula to convert weekly salary to hourly (40h).", "input": "", "output": "DEFAULT FOR WEEKLY_SALARY IS 0\n\nHOURLY_EQUIV = WEEKLY_SALARY / 40\n\nRETURN HOURLY_EQUIV"}
{"instruction": "Write a Fast Formula to calculate employer retirement contribution at 3%.", "input": "", "output": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Rename variable REG_PAY to REGULAR_PAY across the formula.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREGULAR_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REGULAR_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Fix the formula to avoid division by zero.", "input": "RESULT = NUMERATOR / DENOMINATOR\nRETURN RESULT", "output": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT"}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR NUMERATOR IS 0\nDEFAULT FOR DENOMINATOR IS 0\n\nIF DENOMINATOR = 0 THEN\n  RESULT = 0\nELSE\n  RESULT = NUMERATOR / DENOMINATOR\nENDIF\n\nRETURN RESULT", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\nDEFAULT FOR PRETAX_DEDUCTIONS IS 0\n\nTAXABLE_PAY = GROSS_EARNINGS - PRETAX_DEDUCTIONS\n\nRETURN TAXABLE_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\n\nRETURN REG_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0500\nIF EMPLOYER_RETIRE_CONTRIB > 1000 THEN\n  EMPLOYER_RETIRE_CONTRIB = 1000\nENDIF\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add a cap of $3000 to TOTAL_PAY before returning.", "input": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nRETURN TOTAL_PAY", "output": "DEFAULT FOR REG_HOURS IS 0\nDEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nREG_PAY = REG_HOURS * HOURLY_RATE\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nTOTAL_PAY = REG_PAY + OT_PAY\n\nIF TOTAL_PAY > 3000 THEN\n  TOTAL_PAY = 3000\nENDIF\n\nRETURN TOTAL_PAY"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 2.0\n\nRETURN OT_PAY", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Add missing DEFAULT statements to prevent errors when inputs are null.", "input": "OT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY", "output": "DEFAULT FOR OT_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nOT_PAY = OT_HOURS * HOURLY_RATE * 1.5\nRETURN OT_PAY"}
{"instruction": "Modify the formula to use 1.5x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 1.5\n\nRETURN HOLIDAY_PAY"}
{"instruction": "Change the bonus percentage to 15%.", "input": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1000\n\nRETURN BONUS", "output": "DEFAULT FOR BASE_SALARY IS 0\n\nBONUS = BASE_SALARY * 0.1500\n\nRETURN BONUS"}
{"instruction": "Explain what this Fast Formula does.", "input": "DEFAULT FOR GROSS_EARNINGS IS 0\n\nEMPLOYER_RETIRE_CONTRIB = GROSS_EARNINGS * 0.0300\n\nRETURN EMPLOYER_RETIRE_CONTRIB", "output": "This formula implements the described payroll rule and returns the computed result."}
{"instruction": "Modify the formula to use 2.0x instead of the current multiplier.", "input": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY", "output": "DEFAULT FOR HOLIDAY_HOURS IS 0\nDEFAULT FOR HOURLY_RATE IS 0\n\nHOLIDAY_PAY = HOLIDAY_HOURS * HOURLY_RATE * 2.0\n\nRETURN HOLIDAY_PAY"}
